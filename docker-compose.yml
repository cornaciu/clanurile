services:
  db:
    image: postgres:15
    restart: always
    container_name: nextjs_db
    environment:
      POSTGRES_USER: alex
      POSTGRES_PASSWORD: parola1
      POSTGRES_DB: my_crims_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
  app-redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - app-redis-data:/data
  app:
    build: .
    container_name: nextjs_app
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    depends_on:
      - db
      - app-redis # Adaugă Redis ca dependență
    environment:
      # Corectat host-ul de la `app-db-1` la `db`
      DATABASE_URL: postgresql://alex:parola1@db:5432/my_crims_db
      REDIS_URL: redis://app-redis:6379
   # Serviciul pentru pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "password"
    ports:
      - "5050:80"
    depends_on:
      - db

  # Serviciul pentru baza de date Redis
  redis-db:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # Serviciul pentru RedisInsight
  redis-insight:
    image: redislabs/redisinsight:latest
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - redis-insight-data:/db
    depends_on:
      - redis-db

volumes:
  db_data:
  app-redis-data:
  redis-insight-data:
  redis-data:
